# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  # Download and cache dependencies
  nodeModules:
    docker:
      - image: circleci/node:10.15.0

    working_directory: ~/repo

    steps:
      - checkout

      - run: yarn config set prefix ~/.yarn

      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}

      - run: "if [ -e $HOME/.yarn/bin/amplify ]; then echo 'amplify already installed globally, skipping'; else yarn global add @aws-amplify/cli@multienv; fi"

      - run: yarn

      - run: 
          name: Prune unnecessary stuff from node_modules 
          command: curl -sfL https://install.goreleaser.com/github.com/tj/node-prune.sh | bash  && ./bin/node-prune

      - save_cache:
          paths:
            - node_modules
            # capture globally installed amplify CLI...it doesn't work
            # when executing it locally via node_modules/.bin/amplify so w/e 
            - ~/.yarn 
            # previous one symlinks into here
            - ~/.config/yarn
          key: node-v1-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}

  deployToStaging:
    docker:
      - image: circleci/node:10.15.0

    working_directory: ~/repo

    steps:
      - run: echo 'Skipping deploy for faster iteration, brb'

      # - checkout

      # - run: yarn config set prefix ~/.yarn

      # - restore_cache:
      #     keys:
      #       - node-v1-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}

      # # amplify doesn't presently support creds as environment variables so
      # # we write ~/.aws/credentials based on environment variables. ok sure
      # - run: ./script/write_aws_creds_file.sh
      # - run: ./script/amplify_init.sh
      # - run: ~/.yarn/bin/amplify env checkout staging
      # - run: ~/.yarn/bin/amplify publish -y
  perfTests:
    parallelism: 3

    docker:
      - image: kporras07/lighthouse-ci

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Run lighthouse against staging deployment
          command: |
            lighthouse https://staging.kubernetesfordogs.com --port=9222 --chrome-flags=\"--headless\" \
            --output-path=/home/chrome/reports/run-"$(echo -n $CIRCLE_SHELL_ENV | md5sum | awk '{print $1}')" \
            --output=json --output=html --quiet


      - persist_to_workspace:
          root: /home/chrome
          paths:
            - reports

  processResults:
    docker:
      - image: circleci/node:10.15.0

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}

      - attach_workspace:
          at: "."

      - store_artifacts:
          path: reports
          destination: reports

      - run:
          name: Analyze and report desired vs actual lighthouse scores
          command: ./script/analyze_scores.js package.json reports


workflows:
  version: 2
  # at first we will deploy everything but really this should be just for
  # PRs against master; uncomment this.
  # branches:
  #   ignore:
  #     - master
  deployToStagingAndTest:
    jobs:
      - nodeModules
      - deployToStaging:
          requires: 
            - nodeModules
      - perfTests:
          requires: 
            - deployToStaging
      - processResults:
          requires: 
            - perfTests
